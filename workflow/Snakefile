import logging
import glob
import math
import os
from snakemake.io import expand, glob_wildcards

LOGGER = logging.getLogger("snakemake.logging")

if not "REPROFLOW_BASEDIR" in dir():
    # NOTE when used from a module workflow.basedir (and main_snakefile) always point to most-outer wrapping layer, workflow.
    # current_basedir (and snakefile) to the current module
    REPROFLOW_BASEDIR = workflow.current_basedir
    # print(REPROFLOW_BASEDIR)
LOGGER.info("REPROFLOW_BASEDIR = %s",REPROFLOW_BASEDIR)

configfile: "config/config.yaml"

include: "rules/process_fastq.smk"

if config["replicate"]["pair_type"] == "paired":

    include: "rules/create_replicates_paired.smk"

 ############### HELPER FUNCTIONS #################
 def _limit_number_of_replicates(info) -> int:
     number = min(
         config["replicate"]["replicate_number"],
         math.factorial(info) - 1,
     )
     return number


 narr = _limit_number_of_replicates(config["replicate"]["record_len"]) + 1
 # print(range(1,narr))


 def gather_checkpoint_outputs_paired(wildcards):
     return [
         checkpoints.create_replicates_paired.get(**wildcards).output[0],
         checkpoints.create_replicates_paired.get(**wildcards).output[1],
     ]